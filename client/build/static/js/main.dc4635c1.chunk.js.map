{"version":3,"sources":["styles/Footer.module.css","assets/spinner.gif","assets/menu.png","assets/Burger-and-Fries.jpeg","utils/reducers.js","utils/actions.js","utils/store.js","utils/helpers.js","components/ProductItem/index.js","utils/queries.js","components/ProductList/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/Home.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/Success.js","pages/OrderHistory.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","products","categories","currentCategory","cart","cartOpen","reducers","state","action","type","product","map","_id","purchaseQuantity","newState","filter","length","store","createStore","reducer","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","oncomplete","close","ProductItem","item","image","name","price","calorie","useSelector","dispatch","useDispatch","className","to","alt","src","count","pluralize","onClick","itemInCart","find","cartItem","parseInt","QUERY_PRODUCTS","gql","QUERY_CHECKOUT","QUERY_CATEGORIES","QUERY_USER","ProductList","useQuery","loading","data","useEffect","forEach","then","menu","class","category","key","quantity","spinner","CategoryMenu","categoryData","id","CartItem","placeholder","value","onChange","target","role","aria-label","removeFromCart","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","i","stripePromise","loadStripe","Cart","useLazyQuery","getCheckout","toggleCart","res","redirectToCheckout","sessionId","checkout","session","getCart","sum","toFixed","calculateTotal","Auth","loggedIn","productIds","push","variables","Home","Detail","useParams","useState","currentProduct","setCurrentProduct","indexedProducts","description","Jumbotron","children","style","height","clear","paddingTop","textAlign","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","props","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","preventDefault","mutationResponse","handleChange","onSubmit","htmlFor","Signup","addUser","firstName","lastName","Nav","href","logout","Success","addOrder","saveOrder","setTimeout","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","Footer","styles","container","img1","objectFit","layout","card","title","text","errorLink","onError","graphQLErrors","message","client","ApolloClient","operation","setContext","headers","authorization","link","ApolloLink","from","HttpLink","uri","App","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.dc4635c1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Footer_container__1AtZk\",\"item\":\"Footer_item__2FTcy\",\"card\":\"Footer_card__20EwT\",\"title\":\"Footer_title__3dzYz\",\"text\":\"Footer_text__BqiNK\",\"motto\":\"Footer_motto__11QJ6\",\"img1\":\"Footer_img1__9B9Pz\"};","module.exports = __webpack_public_path__ + \"static/media/spinner.ab497855.gif\";","module.exports = __webpack_public_path__ + \"static/media/menu.a2bfd42a.png\";","module.exports = __webpack_public_path__ + \"static/media/Burger-and-Fries.a902dcb0.jpeg\";","import {\n  UPDATE_PRODUCTS,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART,\n  TOGGLE_CART,\n} from \"./actions\";\n\nconst initialState = {\n  products: [],\n  categories: [],\n  currentCategory: \"\",\n  cart: [],\n  cartOpen: false,\n};\n\nexport const reducers = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product],\n      };\n\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map((product) => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity;\n          }\n          return product;\n        }),\n      };\n\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter((product) => {\n        return product._id !== action._id;\n      });\n\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState,\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: [],\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen,\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducers;\n","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\nexport const ADD_TO_CART = 'ADD_TO_CART';\nexport const ADD_MULTIPLE_TO_CART = 'ADD_MULTIPLE_TO_CART';\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART';\nexport const UPDATE_CART_QUANTITY = 'UPDATE_CART_QUANTITY';\nexport const CLEAR_CART = 'CLEAR_CART';\nexport const TOGGLE_CART = 'TOGGLE_CART';","import { createStore } from 'redux';\nimport reducer from './reducers';\n\nconst store = createStore(reducer);\nexport default store;","export function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + \"s\";\n}\nexport function validateEmail(email) {\n  var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    // open connection to the database `shop-shop` with the version of 1\n    const request = window.indexedDB.open(\"shop-shop\", 1);\n\n    // create variables to hold reference to the database, transaction (tx), and object store\n    let db, tx, store;\n\n    // if version has changed (or if this is the first time using the database), run this method and create the three object stores\n    request.onupgradeneeded = function (e) {\n      const db = request.result;\n      // create object store for each type of data and set \"primary\" key index to be the `_id` of the data\n      db.createObjectStore(\"products\", { keyPath: \"_id\" });\n      db.createObjectStore(\"categories\", { keyPath: \"_id\" });\n      db.createObjectStore(\"cart\", { keyPath: \"_id\" });\n    };\n\n    // handle any errors with connecting\n    request.onerror = function (e) {\n      console.log(\"There was an error\");\n    };\n\n    // on database open success\n    request.onsuccess = function (e) {\n      // save a reference of the database to the `db` variable\n      db = request.result;\n      // open a transaction do whatever we pass into `storeName` (must match one of the object store names)\n      tx = db.transaction(storeName, \"readwrite\");\n      // save a reference to that object store\n      store = tx.objectStore(storeName);\n\n      // if there's any errors, let us know\n      db.onerror = function (e) {\n        console.log(\"error\", e);\n      };\n\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function() {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          console.log('No valid method');\n          break;\n      }\n\n      // when the transaction is complete, close the connection\n      tx.oncomplete = function () {\n        db.close();\n      };\n    };\n  });\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\";\n// import { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nfunction ProductItem(item) {\n  const { image, name, _id, price, calorie } = item;\n\n  // const [state, dispatch] = useStoreContext();\n  const state = useSelector((state) => state);\n\n  const dispatch = useDispatch();\n\n  const { cart } = state;\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise(\"cart\", \"put\", {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 },\n      });\n      idbPromise(\"cart\", \"put\", { ...item, purchaseQuantity: 1 });\n    }\n  };\n\n  return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/products/${_id}`}>\n        <img alt={name} src={`/images/${image}`} />\n        <p>{name}</p>\n      </Link>\n      <div>\n        \n        <div>\n        {calorie} {pluralize(\"cal\", calorie)}\n        </div>\n        <span>${price}</span>\n        \n      </div>\n      <button onClick={addToCart}>Add to cart</button>\n    </div>\n  );\n}\n\nexport default ProductItem;\n","import gql from 'graphql-tag';\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      calorie\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      calorie\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n{\n  categories {\n    _id\n    name\n  }\n}\n`;\n\nexport const QUERY_USER = gql`\n{\n  user {\n    firstName\n    lastName\n    orders {\n      _id\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        calorie\n        image\n      }\n    }\n  }\n}\n`;","import React, { useEffect } from \"react\";\nimport ProductItem from \"../ProductItem\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { UPDATE_PRODUCTS } from \"../../utils/actions\";\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_PRODUCTS } from \"../../utils/queries\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport spinner from \"../../assets/spinner.gif\"\nimport menu from \"../../assets/menu.png\"\nfunction ProductList() {\n  const dispatch = useDispatch();\n  const state = useSelector(state => state);\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if(data) {\n      dispatch({\n           type: UPDATE_PRODUCTS,\n          products: data.products\n        });\n        data.products.forEach((product) => {\n          idbPromise('products', 'put', product);\n        });\n    } else if (!loading) {\n      idbPromise('products', 'get').then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n         products: products\n       });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(product => product.category._id === currentCategory);\n  }\n\n  return (\n    <div className=\"my-2\">\n      {/* <h2>Our Menu:</h2> */}\n      \n      <img className= \"menu\" src= {menu}></img>\n      <h3 class=\" u-text-1\">Our Menu</h3>\n    \n      {state.products.length ? (\n        <div className=\"flex-row\">\n            {filterProducts().map(product => (\n                <ProductItem\n                  key= {product._id}\n                  _id={product._id}\n                  image={product.image}\n                  name={product.name}\n                  price={product.price}\n                  calorie={product.calorie}\n                  quantity={product.quantity}\n                />\n            ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      { loading ? \n      <img src={spinner} alt=\"loading\" />: null}\n    </div>\n  );\n}\n\nexport default ProductList;","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\n\nfunction CategoryMenu() {\n  const dispatch = useDispatch();\n  const state = useSelector(state => state);\n\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories\n      });\n      categoryData.categories.forEach(category => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then(categories => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = id => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id\n    });\n  };\n\n  return (\n    <div>\n      {/* <h2>Choose a Category:</h2> */}\n      {categories.map(item => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({ item }) => {\n  const dispatch = useDispatch();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item });\n\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item });\n\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n\n    }\n  }\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div>\n        <div>{item.name}, ${item.price}</div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n          <span\n            role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n          >\n            🗑️\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useEffect } from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { useLazyQuery } from '@apollo/react-hooks';\nimport { QUERY_CHECKOUT } from \"../../utils/queries\"\nimport { idbPromise } from \"../../utils/helpers\"\nimport CartItem from \"../CartItem\";\nimport Auth from \"../../utils/auth\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from \"../../utils/actions\";\nimport \"./style.css\";\n\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n  const dispatch = useDispatch();\n  const state = useSelector(state => state);\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session })\n      })\n    }\n  }, [data]);\n\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n    };\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach(item => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  function submitCheckout() {\n    const productIds = [];\n\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n\n    getCheckout({\n      variables: { products: productIds }\n    });\n  }\n\n  if (!state.cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <span\n          role=\"img\"\n          aria-label=\"trash\">🛒</span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>[close]</div>\n      <h2>Shopping Cart</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map(item => (\n            <CartItem key={item._id} item={item} />\n          ))}\n\n          <div className=\"flex-row space-between\">\n            <strong>Total: ${calculateTotal()}</strong>\n\n            {\n              Auth.loggedIn() ?\n                <button onClick={submitCheckout}>\n                  Checkout\n              </button>\n                :\n                <span>(log in to check out)</span>\n            }\n          </div>\n        </div>\n      ) : (\n          <h3>\n            <span role=\"img\" aria-label=\"shocked\">\n              😱\n          </span>\n          You haven't added anything to your cart yet!\n          </h3>\n        )}\n    </div>\n  );\n};\n\nexport default Cart;","import React from \"react\";\nimport ProductList from \"../components/ProductList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Cart from '../components/Cart';\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      <CategoryMenu />\n      <ProductList />\n      <Cart />\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useQuery } from '@apollo/react-hooks';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Cart from \"../components/Cart\";\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from \"../utils/actions\";\nimport { QUERY_PRODUCTS } from \"../utils/queries\";\nimport { idbPromise } from \"../utils/helpers\";\nimport spinner from '../assets/spinner.gif'\n\nfunction Detail() {\n  const dispatch = useDispatch();\n  const state = useSelector(state => state);\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = state;\n\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find(product => product._id === id));\n    } \n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n\n    }\n  }\n\n  // const removeFromCart = () => {\n  //   dispatch({\n  //     type: REMOVE_FROM_CART,\n  //     _id: currentProduct._id\n  //   });\n\n  //   idbPromise('cart', 'delete', { ...currentProduct });\n  // };\n\n  return (\n    <>\n      {currentProduct && cart ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">\n            ← Back to Products\n          </Link>\n\n          <h2>{currentProduct.name}</h2>\n\n          <p>\n            {currentProduct.description}\n          </p>\n\n          <p>\n            <strong>Price:</strong>\n            ${currentProduct.price}\n            {\" \"}\n            <button onClick={addToCart}>\n              Add to Cart\n            </button>\n            {/* <button \n              disabled={!cart.find(p => p._id === currentProduct._id)} \n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button> */}\n          </p>\n\n          <img\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n          />\n        </div>\n      ) : null}\n      {\n        loading ? <img src={spinner} alt=\"loading\" /> : null\n      }\n      <Cart />\n    </>\n  );\n};\n\nexport default Detail;","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import gql from 'graphql-tag';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n      name\n      description\n      price\n      quantity\n      calorie\n      category {\n        name\n      } \n      }\n    }\n  }\n`;\n\n\nexport const ADD_USER = gql`\n  mutation addUser($firstName: String!, $lastName: String!, $email: String!, $password: String!) {\n    addUser(firstName: $firstName, lastName: $lastName, email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;","import React, { useState } from \"react\";\nimport { useMutation } from '@apollo/react-hooks';\nimport { Link } from \"react-router-dom\";\nimport { LOGIN } from \"../utils/mutations\"\nimport Auth from \"../utils/auth\";\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' })\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({ variables: { email: formState.email, password: formState.password } })\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e)\n    }\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\">\n        ← Go to Signup\n      </Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"username\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"password\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {\n          error ? <div>\n            <p className=\"error-text\" >Wrong Credentials!</p>\n          </div> : null\n        }\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">\n          Sign In\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from '@apollo/react-hooks';\nimport Auth from \"../utils/auth\";\nimport { ADD_USER } from \"../utils/mutations\";\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email, password: formState.password,\n        firstName: formState.firstName, lastName: formState.lastName\n      }\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">\n        ← Go to Login\n      </Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">\n            Submit\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n\n}\n\nexport default Signup;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/orderHistory\">\n              Order History\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">\n              Signup\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">\n              Login\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/careers\">\n              Careers\n            </Link>\n          </li>\n          <li className=\"mx-1\">           \n              <a href=\"tel:951.310.5642\">CALL US</a>\n          </li>\n          \n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1 \">\n      <h1>\n        <Link to=\"/\">\n          <span role=\"img\" aria-label=\"bugger shack\">🍔</span>\n          Burger-Shack \n        </Link>\n        \n      </h1>\n\n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport Jumbotron from '../components/Jumbotron';\nimport { ADD_ORDER } from '../utils/mutations';\nimport { idbPromise } from \"../utils/helpers\";\n\nfunction Success() {\n    const [addOrder] = useMutation(ADD_ORDER);\n\n    useEffect(() => {\n      async function saveOrder() {\n        const cart = await idbPromise('cart', 'get');\n        const products = cart.map(item => item._id);\n\n        if (products.length) {\n            const { data } = await addOrder({ variables: { products } });\n            const productData = data.addOrder.products;\n          \n            productData.forEach((item) => {\n              idbPromise('cart', 'delete', item);\n            });\n          }\n      }\n    \n      saveOrder();\n    }, [addOrder]);\n\n    setTimeout(function() { window.location.assign(\"/\")}, 3000);\n\n    return (\n        <div>\n            <Jumbotron>\n                <h1>Success!</h1>\n                <h2>\n                    Thank you for your purchase!\n                </h2>\n                <h2>\n                    You will now be redirected to the homepage.\n                </h2>\n            </Jumbotron>\n        </div>\n    );\n};\n\nexport default Success;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_USER } from \"../utils/queries\";\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">\n          ← Back to Products\n          </Link>\n\n        {user ? (\n          <>\n            <h2>Order History for {user.firstName} {user.lastName}</h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>{new Date(parseInt(order.purchaseDate)).toLocaleDateString()}</h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img\n                          alt={name}\n                          src={`/images/${image}`}\n                        />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n\n      </div>\n\n    </>)\n\n};\n\nexport default OrderHistory;\n","// import Image from \"next/image\";\nimport styles from \"../../styles/Footer.module.css\";\nimport React from \"react\";\nimport image from \"../../assets/Burger-and-Fries.jpeg\"\nconst Footer = () => {\n    return (\n        <div className={styles.container}>\n            <div className={styles.img1}>\n                <img src={image} objectFit=\"cover\" layout=\"fill\" alt=\"\" />\n            </div>\n            <div className={styles.item}>\n                <div className={styles.card}>\n                    <h3 className={styles.title}>What Our Customers Are Saying</h3>\n                    <p className={styles.text}>\n                        \"My wife and I, amongst other relatives and friends we've introduced this place to, absolutely love the food and service! I haven't had 1 thing that I didn't like from The Shack. I personally don't even bother getting burgers from anywhere else because they don't compare. The owners recently catered our wedding also, and they knocked that straight out of the park. Everything was homemade, and not only was the food amazing - they went well above and beyond what we expected. AND they did it all for such a super low price by comparison to everywhere else we were considering.\n                        I strongly recommend giving this place a try, and don't forget their catering - you won't be disappointed!\"\n                    </p>\n                </div>\n                <div className={styles.card}>\n                    <h1 className={styles.title}>FIND OUR RESTAURANTS</h1>\n                    <p className={styles.text}>\n                    2060 Logan Ave Ste. A, \n                        <br /> San Diego, CA 92113\n                        <br />  (619) 539-7175\n                    </p>\n                    <p className={styles.text}>\n                    879 W Harbor Dr Suite G, \n                        <br /> San Diego, CA 92101\n                        <br />  (619) 539-7175\n                    </p>\n                </div>\n                <div className={styles.card}>\n                    <h1 className={styles.title}>WORKING HOURS</h1>\n                    <p className={styles.text}>\n                        MONDAY UNTIL FRIDAY\n                        <br /> 9:00 – 22:00\n                    </p>\n                    <p className={styles.text}>\n                        SATURDAY - SUNDAY\n                        <br /> 12:00 – 24:00\n                    </p>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Footer;\n","import ApolloClient, { ApolloLink, HttpLink } from 'apollo-boost';\nimport { onError } from 'apollo-link-error'\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { Provider } from 'react-redux';\nimport store from './utils/store';\nimport Home from \"./pages/Home\";\nimport Detail from \"./pages/Detail\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Nav from \"./components/Nav\";\nimport Success from \"./pages/Success\";\nimport OrderHistory from \"./pages/OrderHistory\";\nimport Footer from \"./components/Footer\";\n// import Careers from \"./components/Careers\";\n\n\nconst errorLink = onError(({ graphQLErrors }) => {\n  if (graphQLErrors) graphQLErrors.map(({ message }) => console.log(message))\n});\n\nconst client = new ApolloClient({\n  request: (operation) => {\n    const token = localStorage.getItem('id_token')\n    operation.setContext({\n      headers: {\n        authorization: token ? `Bearer ${token}` : ''\n      },\n      link: ApolloLink.from([errorLink, HttpLink])\n    })\n  },\n  uri: '/graphql',\n})\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <Provider store={store}>\n            <Nav />\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/login\" component={Login} />\n              {/* <Route exact path=\"/careers\" component={Careers} /> */}\n              <Route exact path=\"/signup\" component={Signup} />\n              <Route exact path=\"/success\" component={Success} />\n              <Route exact path=\"/orderHistory\" component={OrderHistory} />\n              <Route exact path=\"/products/:id\" component={Detail} />\n              <Route component={NoMatch} />\n              <Footer />\n            </Switch>\n            <Footer/>\n          </Provider>\n        </div>\n      </Router>\n    </ApolloProvider>\n\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}